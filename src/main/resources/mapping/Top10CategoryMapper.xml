<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuzhong.sparkproject.dao.Top10CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.xuzhong.sparkproject.domain.Top10Category" >
    <id column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="click_count" property="clickCount" jdbcType="INTEGER" />
    <result column="order_count" property="orderCount" jdbcType="INTEGER" />
    <result column="pay_count" property="payCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    task_id, category_id, click_count, order_count, pay_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xuzhong.sparkproject.domain.Top10CategoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from top10_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from top10_category
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from top10_category
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuzhong.sparkproject.domain.Top10CategoryExample" >
    delete from top10_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuzhong.sparkproject.domain.Top10Category" >
    insert into top10_category (task_id, category_id, click_count, 
      order_count, pay_count)
    values (#{taskId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{clickCount,jdbcType=INTEGER}, 
      #{orderCount,jdbcType=INTEGER}, #{payCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xuzhong.sparkproject.domain.Top10Category" >
    insert into top10_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="clickCount != null" >
        click_count,
      </if>
      <if test="orderCount != null" >
        order_count,
      </if>
      <if test="payCount != null" >
        pay_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="clickCount != null" >
        #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="orderCount != null" >
        #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="payCount != null" >
        #{payCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuzhong.sparkproject.domain.Top10CategoryExample" resultType="java.lang.Integer" >
    select count(*) from top10_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update top10_category
    <set >
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.clickCount != null" >
        click_count = #{record.clickCount,jdbcType=INTEGER},
      </if>
      <if test="record.orderCount != null" >
        order_count = #{record.orderCount,jdbcType=INTEGER},
      </if>
      <if test="record.payCount != null" >
        pay_count = #{record.payCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update top10_category
    set task_id = #{record.taskId,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      click_count = #{record.clickCount,jdbcType=INTEGER},
      order_count = #{record.orderCount,jdbcType=INTEGER},
      pay_count = #{record.payCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuzhong.sparkproject.domain.Top10Category" >
    update top10_category
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="clickCount != null" >
        click_count = #{clickCount,jdbcType=INTEGER},
      </if>
      <if test="orderCount != null" >
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="payCount != null" >
        pay_count = #{payCount,jdbcType=INTEGER},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuzhong.sparkproject.domain.Top10Category" >
    update top10_category
    set category_id = #{categoryId,jdbcType=INTEGER},
      click_count = #{clickCount,jdbcType=INTEGER},
      order_count = #{orderCount,jdbcType=INTEGER},
      pay_count = #{payCount,jdbcType=INTEGER}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
</mapper>